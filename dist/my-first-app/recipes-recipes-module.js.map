{"version":3,"sources":["./src/app/recipes/recipes-resolver.service.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipes/recipe-list/recipe-list.component.css","./src/app/recipes/recipes.module.ts","./src/app/recipes/recipes.component.html","./src/app/recipes/recipe-start/recipe-start.component.ts","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/auth/auth.guard.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipes-routing.module.ts","./src/app/recipes/recipe-edit/recipe-edit.component.html","./src/app/recipes/recipe-edit/recipe-edit.component.css","./src/app/recipes/recipe-start/recipe-start.component.css","./src/app/recipes/recipe.model.ts","./src/app/recipes/recipe-start/recipe-start.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.css","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/app/recipes/recipes.component.css"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { DataStorageService } from '../shared/data-storage.service';\r\nimport { Recipe } from './recipe.model';\r\nimport { RecipeService } from './recipe.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RecipesResolverService implements Resolve<Recipe[]> {\r\n  constructor(private dataStorageService: DataStorageService, private recipeService: RecipeService) {}\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const recipes = this.recipeService.getRecipes();\r\n    if (recipes.length === 0) {\r\n      return this.dataStorageService.fetchRecipes();\r\n    } else {\r\n      return recipes;\r\n    }\r\n  }\r\n}\r\n","export default \"<a style=\\\"cursor: pointer\\\" [routerLink]=\\\"index\\\" class=\\\"list-group-item clearfix\\\" routerLinkActive=\\\"active\\\">\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">\\n      {{ recipe.name }}\\n    </h4>\\n    <p class=\\\"list-group-item-text\\\">{{ recipe.description }}</p>\\n  </div>\\n  <span class=\\\"pull-right\\\">\\n    <img [src]=\\\"recipe.imagePath\\\" alt=\\\"{{ recipe.name }}\\\" class=\\\"img-responsive\\\" style=\\\"max-height: 50px\\\" />\\n  </span>\\n</a>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { RecipesComponent } from './recipes.component';\r\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeItemComponent } from './recipe-list/recipe-item/recipe-item.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RecipesRoutingModule } from './recipes-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecipesComponent,\r\n    RecipeListComponent,\r\n    RecipeDetailComponent,\r\n    RecipeItemComponent,\r\n    RecipeStartComponent,\r\n    RecipeEditComponent\r\n  ],\r\n  imports: [RouterModule, SharedModule, ReactiveFormsModule, RecipesRoutingModule]\r\n})\r\nexport class RecipesModule {}\r\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-recipe-list></app-recipe-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onNewRecipe()\\\">New Recipe</button>\\n  </div>\\n</div>\\n<hr />\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <app-recipe-item *ngFor=\\\"let recipeEl of recipes; let i = index\\\" [recipe]=\\\"recipeEl\\\" [index]=\\\"i\\\"></app-recipe-item>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | UrlTree | Promise<boolean | UrlTree> | Observable<boolean | UrlTree> {\r\n    return this.authService.user.pipe(\r\n      take(1),\r\n      map(user => {\r\n        const isAuth = !!user;\r\n        if (isAuth) {\r\n          return true;\r\n        }\r\n        return this.router.createUrlTree(['/auth']);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGUtaXRlbS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() index: number;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../auth/auth.guard';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipesResolverService } from './recipes-resolver.service';\r\nimport { RecipesComponent } from './recipes.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecipesComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: RecipeStartComponent },\r\n      { path: 'new', component: RecipeEditComponent },\r\n      { path: ':id', component: RecipeDetailComponent, resolve: [RecipesResolverService] },\r\n      { path: ':id/edit', component: RecipeEditComponent, resolve: [RecipesResolverService] }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RecipesRoutingModule {}\r\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form [formGroup]=\\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!recipeForm.valid\\\">Save</button>\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\"> Name</label>\\n            <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"imagePath\\\">ImageURL</label>\\n            <input type=\\\"text\\\" id=\\\"imagePath\\\" formControlName=\\\"imagePath\\\" class=\\\"form-control\\\" #imagePath />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <img [src]=\\\"imagePath.value\\\" class=\\\"img-responsive\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\">Description</label>\\n            <textarea type=\\\"text\\\" id=\\\"description\\\" formControlName=\\\"description\\\" class=\\\"form-control\\\" rows=\\\"6\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\" formArrayName=\\\"ingredients\\\">\\n          <div class=\\\"row\\\" *ngFor=\\\"let ingredientCtrl of controls; let i = index\\\" [formGroupName]=\\\"i\\\" style=\\\"margin-top: 0.3rem\\\">\\n            <div class=\\\"col-xs-8\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"amount\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteIngredient(i)\\\" type=\\\"button\\\">X</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <hr />\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"onAddIngredient()\\\" type=\\\"button\\\">Add Ingredient</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"input.ng-invalid.ng-touched,\\r\\ntextarea.ng-invalid.ng-touched {\\r\\n  border: 2px solid red;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlY2lwZS1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InJlY2lwZS1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQsXHJcbnRleHRhcmVhLm5nLWludmFsaWQubmctdG91Y2hlZCB7XHJcbiAgYm9yZGVyOiAycHggc29saWQgcmVkO1xyXG59XHJcbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGUtc3RhcnQuY29tcG9uZW50LmNzcyJ9 */\";","import { Ingredient } from '../shared/ingredient.model';\n\nexport class Recipe {\n  public name: string;\n  public description: string;\n  public imagePath: string;\n  public ingredients: Ingredient[];\n\n  constructor(name: string, desc: string, imagePath: string, ingredients: Ingredient[]) {\n    this.name = name;\n    this.description = desc;\n    this.imagePath = imagePath;\n    this.ingredients = ingredients;\n  }\n}\n","export default \"<h3>Please select a recipe</h3>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGUtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <img [src]=\\\"recipe.imagePath\\\" [alt]=\\\"recipe.name\\\" class=\\\"img-responsive\\\" style=\\\"max-height: 300px\\\" />\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>{{ recipe.name }}</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"btn-group\\\" appDropdown>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">Manage Recipe <span class=\\\"caret\\\"></span></button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li><a (click)=\\\"onAddToShoppingList()\\\" style=\\\"cursor: pointer\\\">To shopping List</a></li>\\n        <li><a style=\\\"cursor: pointer\\\" (click)=\\\"onEditRecipe()\\\">Edit Recipe</a></li>\\n        <li><a style=\\\"cursor: pointer\\\" (click)=\\\"onDeleteRecipe()\\\">Delete Recipe</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">{{ recipe.description }}</div>\\n</div>\\n<div class=\\\"row\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let ingredient of recipe.ingredients\\\">{{ ingredient.name }} - {{ ingredient.amount }}</li>\\n  </ul>\\n</div>\\n\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n  recipes: Recipe[];\n  subscription: Subscription;\n  constructor(private recipeService: RecipeService, private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.subscription = this.recipeService.recipeChanged.subscribe((recipes: Recipe[]) => {\n      this.recipes = recipes;\n    });\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  onNewRecipe() {\n    this.router.navigate(['new'], { relativeTo: this.route });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe: Recipe;\n  id: number;\n\n  constructor(private recipeService: RecipeService, private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit() {\n    // tslint:disable-next-line: deprecation\n    this.route.params.subscribe((params: Params) => {\n      this.id = params['id'];\n      this.recipe = this.recipeService.getRecipe(this.id);\n    });\n  }\n\n  onAddToShoppingList() {\n    this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\n  }\n\n  onEditRecipe() {\n    this.router.navigate(['edit'], { relativeTo: this.route });\n    // this.router.navigate(['../', this.id, 'edit'], { relativeTo: this.route });\n  }\n\n  onDeleteRecipe() {\n    this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['/recipes']);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode = false;\n  recipeForm: FormGroup;\n  constructor(private route: ActivatedRoute, private recipeService: RecipeService, private router: Router) {}\n\n  ngOnInit() {\n    // tslint:disable-next-line: deprecation\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null; // 查看自己在new模式还是edit模式\n      this.initForm();\n    });\n  }\n  onSubmit() {\n    // const newRecipe = new Recipe(\n    //   this.recipeForm.value['name'],\n    //   this.recipeForm.value['description'],\n    //   this.recipeForm.value['imagePath'],\n    //   this.recipeForm.value['ingredients']\n    // );\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel(); // 用于回到主界面\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        name: new FormControl(null, Validators.required),\n        amount: new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      })\n    );\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              name: new FormControl(ingredient.name, Validators.required),\n              amount: new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n            })\n          );\n        }\n      }\n    }\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      imagePath: new FormControl(recipeImagePath, Validators.required),\n      description: new FormControl(recipeDescription, Validators.required),\n      ingredients: recipeIngredients\n    });\n  }\n  get controls() {\n    // a getter!\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGVzLmNvbXBvbmVudC5jc3MifQ== */\";"],"sourceRoot":"webpack:///"}